CREATE PROCEDURE sp_registrarCliente(@param_CEDULA INT, 
									 @param_NOMBRE VARCHAR(50), 
									 @param_APELLIDO VARCHAR(50), 
									 @param_ALIAS VARCHAR(50), 
									 @param_CONTRASENNA VARCHAR(50))
AS 
BEGIN
	INSERT INTO [USUARIO].[tb_USUARIO](
	[CEDULA]
	, [NOMBRE]
	, [APELLIDO]
	, [ALIAS]
	, [CONTRASENNA]
	, [IDCREDIT]
	, [TIPO]
	)VALUES(
	@param_CEDULA
	,@param_NOMBRE
	,@param_APELLIDO
	,@param_ALIAS
	,@param_CONTRASENNA
	,NULL
	,'Cliente'
	)
END
GO

select * from [USUARIO].[tb_USUARIO]
GO
CREATE PROCEDURE sp_iniciarSesion(@param_ALIAS VARCHAR(50), @param_CONTRASENNA VARCHAR(50))
AS 
BEGIN
	SELECT
	U.CEDULA
	,U.ALIAS
	,U.TIPO
	FROM USUARIO.tb_USUARIO U
	WHERE U.ALIAS = @param_ALIAS AND U.CONTRASENNA = @param_CONTRASENNA
END
GO
CREATE PROCEDURE sp_categorias
AS
BEGIN
	SELECT
	ID
	,CATEGORIA
	FROM PRODUCTO.tb_CATEGORIA
END
GO

CREATE PROCEDURE sp_registrarProducto(@param_NOMBREP VARCHAR(250)
									, @param_DESCRIPCION VARCHAR(MAX)
									, @param_PRECIO INT
									, @param_DIMENSION VARCHAR(50)
									, @param_OTRASCARACTERISTICAS VARCHAR(200)
									, @param_FOTO VARCHAR(220)
									, @param_CANTIDAD INT
									, @param_IDP INT
									, @param_IDC INT
									, @param_MARCA VARCHAR(50))

AS
BEGIN
	INSERT INTO PRODUCTO.tb_PRODUCTO(
	[NOMBREP]
	, [DESCRIPCION]
	, [PRECIO]
	, [DIMENSION]
	, [OTRASCARACTERISTICAS]
	, [FOTO]
	, [CANTIDAD]
	, [ISDELETE]
	, [IDPROVEEDOR]
	, [IDCATEGORIA]
	, [MARCA]
	)VALUES(
	@param_NOMBREP
	,@param_DESCRIPCION
	,@param_PRECIO
	,@param_DIMENSION
	,@param_OTRASCARACTERISTICAS
	,@param_FOTO
	,@param_CANTIDAD
	,0
	,@param_IDP
	,@param_IDC
	,@param_MARCA
	)
END
GO

ALTER PROCEDURE sp_listaProducto(@param_NOMBREP VARCHAR(250))
AS
BEGIN
	
		SELECT
		P.IDP
		,P.NOMBREP
		,P.DESCRIPCION
		,P.DIMENSION
		,P.PRECIO
		,P.CANTIDAD
		,P.MARCA
		,P.OTRASCARACTERISTICAS
		,P.FOTO
		,PC.CATEGORIA
		,PP.NOMBRE AS PROVEEDOR
		FROM PRODUCTO.tb_PRODUCTO P
			JOIN PRODUCTO.tb_CATEGORIA PC
				ON P.IDCATEGORIA = PC.ID
				JOIN PROVEEDOR.tb_PROVEEDOR PP
					ON P.IDPROVEEDOR = PP.ID
		WHERE P.NOMBREP LIKE '%'+@param_NOMBREP+'%' or PC.CATEGORIA LIKE '%'+@param_NOMBREP+'%'
	
END
GO
CREATE PROCEDURE sp_mostrarProducto
AS
BEGIN
	
		SELECT
		P.IDP
		,P.NOMBREP
		,P.DESCRIPCION
		,P.DIMENSION
		,P.PRECIO
		,P.CANTIDAD
		,P.MARCA
		,P.OTRASCARACTERISTICAS
		,P.FOTO
		,PC.CATEGORIA
		,PP.NOMBRE AS PROVEEDOR
		FROM PRODUCTO.tb_PRODUCTO P
			JOIN PRODUCTO.tb_CATEGORIA PC
				ON P.IDCATEGORIA = PC.ID
				JOIN PROVEEDOR.tb_PROVEEDOR PP
					ON P.IDPROVEEDOR = PP.ID
		WHERE P.ISDELETE = 0
	
END
GO
CREATE PROCEDURE sp_detalleProducto(@param_ID INT)
AS
BEGIN
	
		SELECT
		P.IDP
		,P.NOMBREP
		,P.DESCRIPCION
		,P.DIMENSION
		,P.PRECIO
		,P.CANTIDAD
		,P.MARCA
		,P.OTRASCARACTERISTICAS
		,P.FOTO
		,PC.CATEGORIA
		,PP.NOMBRE AS PROVEEDOR
		FROM PRODUCTO.tb_PRODUCTO P
			JOIN PRODUCTO.tb_CATEGORIA PC
				ON P.IDCATEGORIA = PC.ID
				JOIN PROVEEDOR.tb_PROVEEDOR PP
					ON P.IDPROVEEDOR = PP.ID
		WHERE P.IDP = @param_ID
	
END
GO
CREATE PROCEDURE sp_anadirCarrito(@param_CEDULA INT, @param_IDP INT, @param_CANTIDAD INT)
AS
BEGIN
	IF EXISTS(SELECT IDP, IDU FROM PRODUCTO.tb_CARRITO WHERE IDP = @param_IDP AND IDU = @param_CEDULA)
	BEGIN
		UPDATE PRODUCTO.tb_CARRITO
		SET CANTIDAD = CANTIDAD + @param_CANTIDAD
		WHERE IDP = @param_IDP AND IDU = @param_CEDULA
	END
	ELSE
	BEGIN
		INSERT INTO PRODUCTO.tb_CARRITO(
		[IDP]
		, [IDU]
		,CANTIDAD
		)VALUES(
		@param_IDP
		,@param_CEDULA
		,@param_CANTIDAD
		)
	END
END
GO
CREATE PROCEDURE sp_verCarrito(@param_IDU INT)
AS
BEGIN
	SELECT
	P.IDP
	,P.FOTO
	,P.NOMBREP
	,P.PRECIO
	,C.CANTIDAD
	,P.CANTIDAD AS STOCK
	FROM PRODUCTO.tb_PRODUCTO P
		JOIN PRODUCTO.tb_CARRITO C
			ON P.IDP = C.IDP
			JOIN USUARIO.tb_USUARIO U
				ON C.IDU = U.CEDULA
	WHERE U.CEDULA = @param_IDU
END


select * from PRODUCTO.tb_CARRITO

update PRODUCTO.tb_CARRITO
set CANTIDAD = 3
where IDP = 5
delete from PRODUCTO.tb_CARRITO

--select * from PRODUCTO.tb_CARRITO


--ALTER TABLE PROVEEDOR.tb_CLAVE
--ADD CLAVE_ENCRYPTED VARBINARY(128)

--CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Aplicada-2021'
--OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Aplicada-2021'

--CREATE CERTIFICATE CLAVE_ENCRYPTED_CERT
--WITH SUBJECT = 'CERTIFICADO PARA LAS CLAVES'

--CREATE SYMMETRIC KEY CLAVE_KEY_01
--WITH ALGORITHM = AES_256
--ENCRYPTION BY CERTIFICATE CLAVE_ENCRYPTED_CERT


--OPEN SYMMETRIC KEY CLAVE_KEY_01 DECRYPTION BY CERTIFICATE CLAVE_ENCRYPTED_CERT

--UPDATE PROVEEDOR.tb_CLAVE
--SET CLAVE_ENCRYPTED = ENCRYPTBYKEY(KEY_GUID('CLAVE_KEY_01'),CLAVE) 

--CLOSE SYMMETRIC KEY CLAVE_KEY_01

--SELECT * FROM PROVEEDOR.tb_CLAVE

--ALTER TABLE CUSTOMERS.tb_CREDIT_CARD
--DROP COLUMN CREDIT_CARD_NUMBER

--SELECT
--IDC
--,CLAVE_ENCRYPTED
--,CONVERT(varchar,DECRYPTBYKEYAUTOCERT(CERT_ID('CLAVE_ENCRYPTED_CERT'),NULL,CLAVE_ENCRYPTED)) AS TCC_DESCRYPTION
--FROM PROVEEDOR.tb_CLAVE
--select * from PRODUCTO.tb_PRODUCTO
GO
CREATE PROCEDURE sp_actualizarCarrito(@param_IDP INT, @param_IDU INT, @param_ASC INT)
AS
BEGIN
	IF @param_ASC = 1
	BEGIN
		UPDATE PRODUCTO.tb_CARRITO
		SET CANTIDAD = CANTIDAD-1
		WHERE IDP = @param_IDP AND IDU = @param_IDU
	END
	IF @param_ASC = 2
	BEGIN
		UPDATE PRODUCTO.tb_CARRITO
		SET CANTIDAD = CANTIDAD+1
		WHERE IDP = @param_IDP AND IDU = @param_IDU
	END
END

exec sp_actualizarCarrito @param_IDP = 3, @param_IDU = 305220049, @param_ASC = 2

GO
CREATE PROCEDURE sp_eliminarCarrito(@param_IDP INT, @param_IDU INT)
AS
BEGIN
	DELETE FROM PRODUCTO.tb_CARRITO
	WHERE IDP = @param_IDP AND IDU = @param_IDU
END
exec sp_eliminarCarrito @param_IDP = 5, @param_IDU= 305050839